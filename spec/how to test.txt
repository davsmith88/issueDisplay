Testing

Feature Specs
============
Are a kind of acceptance test, (high level) which walk through the entire application ensuring components work together. Written from the perspective of the user clicking around the application. Use Rspec and Cabybara. Feature specs are slow to run. Only test edge cases 

Model Specs
==========
Model Specs are similar to unit tests and are use to test smaller parts of the system (classes/methods). Sometimes interact with the database. Should be fast and handle edge cases. Write four phase tests to maintain readability

   What to test
   -------
   Models create method (when passed valid attributes should be valid)
   Test validations seperatly
   Data the fail validations should not be valid
   test for failures
   test for associations (use shoulda)
   test for column specifications
   Class and instance methods perform as expected

Controller Specs
=============
When testing mulitple paths through a controller. Good use case is for testing authentication / authorization. Faster than feature tests and easier to write

View Specs
=========
Great for testing the conditional logic of inforamtion in templates.

Factory Girl
===========
While writting your tests you will need a way to set up database records in a way to test against them. Use factories over fixtures. Fixtures make it hard to see cause and effect because logic is defined in a file far way from the context in which it is being used. Factories put logic right in the test. Make it easy to see what is happening at a glance and are more flexible to diff scenarios you may want to set up

Specs with javascript
====================
Running your specs with the default driver will not run any javascript on the page.
Need to install a Javascript driver. Selenium will open a gui browser and click around he page will you watch. At times useful, but slow. For speed use a headless browser. For rails use Poltergeist or capybara Webkit. These will be feature tests